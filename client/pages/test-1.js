import Head from 'next/head'
import React, {useEffect} from "react";
import Link from "next/link";
import AuthClass from "@/sublimates/Auth/AuthClass";
import LocalStorageClass from "@/sublimates/LocalStorage/LocalStorageClass";
import DateEngineClass from "@/sublimates/Date/DateEngineClass";
import TelegramBotEngineClass from "@/sublimates/Telegram/TelegramBotEngineClass";
import process from "next/dist/build/webpack/loaders/resolve-url-loader/lib/postcss";
import InputClass from "@/sublimates/Input/InputClass";
import ValidatorClass from "@/sublimates/Validator/ValidatorClass";
import RegularClass from "@/sublimates/Regular/RegularClass";
import MediaQueriesClass from "@/sublimates/MediaQueries/MediaQueriesClass";
import IPGeolocationClass from "@/sublimates/IPGeolocation/IPGeolocationClass";
import Test from "@/Components/test/test";
import ErrorBoundary from "@/sublimates/Errors/ErrorBoundary/ErrorBoundary";
import PopupEngineClass from "@/sublimates/Popup/PopupEngineClass";
import {useDispatch} from "react-redux";
import {new_error} from "@/sublimates/Redux/actions/Error";
import {withLayoutPages} from "@/hoc/layouts/pages/layout_pages";
import {HocErrors} from "@/hoc/HocErrors";


const auth = new AuthClass();
const date = new DateEngineClass();
const tgbot = new TelegramBotEngineClass();
const input = new InputClass();
const validator = new ValidatorClass();
const regular = new RegularClass();
const media = new MediaQueriesClass();
const ip = new IPGeolocationClass();
const pop = new PopupEngineClass();
import SEOClass from "@/sublimates/SEO/SEOClass";
import Image from "next/dist/client/legacy/image";

const seo = new SEOClass(true);

/*export const getStaticProps = async () => {
    const res = await fetch('https://api.publicapis.org/entries');
    const data = await res.json();

    return {
        props: data
    };
};*/


function Test1() {

    const inp = input.init('');

    // console.log(regular.load());
    // console.log(regular.is_bot());


    return (
        <>
            <Head>
                <title>Test page 1</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <HocErrors>
                <main style={{'padding':'50px 10px', 'display':'flex', 'justifyContent':'center',
                    'alignItems':'center', 'gap':'30px','flexDirection':'column'}}>

                    <ErrorBoundary error errorInfo>
                        <Test/>
                    </ErrorBoundary>

                </main>
            </HocErrors>
        </>
    )
}

export default withLayoutPages(Test1);